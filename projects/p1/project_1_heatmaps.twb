<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.1004.1720                               -->
<workbook source-build='10.0.2 (10000.16.1004.1720)' source-platform='mac' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='sat_scores' inline='true' name='federated.15wp4731kgiqpu1bmlkpl1uanrud' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='sat_scores' name='textscan.1dihxqu1gsk7kb154h5vu0gjfc46'>
            <connection class='textscan' directory='/Users/christopherpleasants/dsi2016/ATL-DSI2/01-projects-weekly/project-01/assets' filename='sat_scores.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1dihxqu1gsk7kb154h5vu0gjfc46' name='sat_scores.csv' table='[sat_scores#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='integer' name='Rate' ordinal='1' />
            <column datatype='integer' name='Verbal' ordinal='2' />
            <column datatype='integer' name='Math' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[sat_scores.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rate]</local-name>
            <parent-name>[sat_scores.csv]</parent-name>
            <remote-alias>Rate</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Verbal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Verbal]</local-name>
            <parent-name>[sat_scores.csv]</parent-name>
            <remote-alias>Verbal</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Math</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Math]</local-name>
            <parent-name>[sat_scores.csv]</parent-name>
            <remote-alias>Math</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sat_scores.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.403013' measure-ordering='alphabetic' measure-percentage='0.596987' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='usa-tableau-mapping%2FStates - Offset HI AK%2FStates - Offset AK HI v8 Extract' inline='true' name='federated.0te0ovm0hblpc314mi7660ewa6n8' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='usa-tableau-mapping%2FStates - Offset HI AK%2FStates - Offset AK HI v8' name='dataengine.0spf5ij1f1p8cj1f2qpy90n4t3m3'>
            <connection class='dataengine' dbname='/Users/christopherpleasants/Downloads/usa-tableau-mapping%2FStates - Offset HI AK%2FStates - Offset AK HI v8.tde' schema='Extract' tablename='Extract' />
          </named-connection>
        </named-connections>
        <relation connection='dataengine.0spf5ij1f1p8cj1f2qpy90n4t3m3' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>0</ordinal>
            <family>&apos;Polygon Shapes$&apos;</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6188</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>24.607417612946602</statistic>
              <statistic aggregation='Max' datatype='real'>49.385620000000003</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>1</ordinal>
            <family>&apos;Polygon Shapes$&apos;</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6185</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>-124.734253</statistic>
              <statistic aggregation='Max' datatype='real'>-66.954002000000003</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>4</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>2</ordinal>
            <family>&apos;Polygon Shapes$&apos;</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>1.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PointOrder</remote-name>
            <remote-type>4</remote-type>
            <local-name>[PointOrder]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>PointOrder</remote-alias>
            <ordinal>3</ordinal>
            <family>&apos;Polygon Shapes$&apos;</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7349</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>7555.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PolygonID</remote-name>
            <remote-type>4</remote-type>
            <local-name>[PolygonID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>PolygonID</remote-alias>
            <ordinal>4</ordinal>
            <family>&apos;Polygon Shapes$&apos;</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>59</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>31266.0</statistic>
              <statistic aggregation='Max' datatype='real'>32619.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>State ID</remote-alias>
            <ordinal>5</ordinal>
            <family>&apos;Polygon Shapes$&apos;</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>50</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>6</ordinal>
            <family>&apos;Polygon Shapes$&apos;</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>50</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' hidden='true' name='[F8]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F9]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Sum' caption='Point ID' datatype='real' name='[PointOrder]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='real' name='[PolygonID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State ID]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.482109' measure-ordering='alphabetic' measure-percentage='0.517891' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='AK_Math'>
      <table>
        <view>
          <datasources>
            <datasource caption='sat_scores' name='federated.15wp4731kgiqpu1bmlkpl1uanrud' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15wp4731kgiqpu1bmlkpl1uanrud'>
            <column datatype='integer' name='[Math]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Math]' derivation='Sum' name='[sum:Math:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;AK&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Longitude (generated)]' field-type='quantitative' max='-14100403.381921295' min='-20311968.005020939' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Latitude (generated)]' field-type='quantitative' max='11766749.015807481' min='6410999.9630015697' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Math:qk]' max='603' min='439' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Math:qk]' />
              <lod column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]' />
              <geometry column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Latitude (generated)]</rows>
        <cols>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='AK_Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='sat_scores' name='federated.15wp4731kgiqpu1bmlkpl1uanrud' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15wp4731kgiqpu1bmlkpl1uanrud'>
            <column datatype='integer' name='[Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Rate]' derivation='Sum' name='[sum:Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;AK&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='52' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Rate:qk]' max='82' min='4' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Rate:qk]' />
              <lod column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]' />
              <geometry column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Latitude (generated)]</rows>
        <cols>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='AK_Verbal'>
      <table>
        <view>
          <datasources>
            <datasource caption='sat_scores' name='federated.15wp4731kgiqpu1bmlkpl1uanrud' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15wp4731kgiqpu1bmlkpl1uanrud'>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Verbal]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Verbal]' derivation='Sum' name='[sum:Verbal:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;AK&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Longitude (generated)]' field-type='quantitative' max='-13610587.882936424' min='-20801783.504005805' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Latitude (generated)]' field-type='quantitative' max='11945784.858591273' min='6231964.1202177778' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Verbal:qk]' max='593' min='482' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Verbal:qk]' />
              <lod column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]' />
              <geometry column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Latitude (generated)]</rows>
        <cols>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='HI_Math'>
      <table>
        <view>
          <datasources>
            <datasource caption='sat_scores' name='federated.15wp4731kgiqpu1bmlkpl1uanrud' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15wp4731kgiqpu1bmlkpl1uanrud'>
            <column datatype='integer' name='[Math]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Math]' derivation='Sum' name='[sum:Math:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;HI&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Longitude (generated)]' field-type='quantitative' max='-17095569.716570165' min='-17994019.719477531' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Latitude (generated)]' field-type='quantitative' max='2710470.6097786198' min='1996600.1312780804' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='521' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Math:qk]' max='603' min='439' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Math:qk]' />
              <lod column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]' />
              <geometry column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Latitude (generated)]</rows>
        <cols>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='HI_Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='sat_scores' name='federated.15wp4731kgiqpu1bmlkpl1uanrud' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15wp4731kgiqpu1bmlkpl1uanrud'>
            <column datatype='integer' name='[Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Rate]' derivation='Sum' name='[sum:Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;HI&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Longitude (generated)]' field-type='quantitative' max='-17158370.845677447' min='-17915338.805790011' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Latitude (generated)]' field-type='quantitative' max='2643952.2755718115' min='2042497.4610061802' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='52' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Rate:qk]' max='82' min='4' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Rate:qk]' />
              <lod column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]' />
              <geometry column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Latitude (generated)]</rows>
        <cols>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='HI_Verbal'>
      <table>
        <view>
          <datasources>
            <datasource caption='sat_scores' name='federated.15wp4731kgiqpu1bmlkpl1uanrud' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15wp4731kgiqpu1bmlkpl1uanrud'>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Verbal]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Verbal]' derivation='Sum' name='[sum:Verbal:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;HI&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Longitude (generated)]' field-type='quantitative' max='-17158370.845677447' min='-17915338.805790011' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Latitude (generated)]' field-type='quantitative' max='2643952.2755718115' min='2042497.4610061802' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Verbal:qk]' max='593' min='482' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Verbal:qk]' />
              <lod column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]' />
              <geometry column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Latitude (generated)]</rows>
        <cols>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='US_Math'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='24'>Average SAT Math Scores by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sat_scores' name='federated.15wp4731kgiqpu1bmlkpl1uanrud' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15wp4731kgiqpu1bmlkpl1uanrud'>
            <column datatype='integer' name='[Math]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Math]' derivation='Sum' name='[sum:Math:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;All&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ME&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MI&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ND&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NM&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OK&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;RI&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;SD&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;VT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WI&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WV&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Longitude (generated)]' field-type='quantitative' max='-6949738.0442690942' min='-15048780.273283007' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Latitude (generated)]' field-type='quantitative' max='6558243.8040211732' min='593130.30065792718' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Math:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Math:qk]' value='SAT Math Score'>
              <formatted-text>
                <run>SAT Math Score</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Math:qk]' />
              <lod column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]' />
              <geometry column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Latitude (generated)]</rows>
        <cols>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='US_Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='24'>Percent of Students Taking SAT, USA</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sat_scores' name='federated.15wp4731kgiqpu1bmlkpl1uanrud' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15wp4731kgiqpu1bmlkpl1uanrud'>
            <column datatype='integer' name='[Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Rate]' derivation='Sum' name='[sum:Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;All&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ME&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MI&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ND&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NM&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OK&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;RI&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;SD&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;VT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WI&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WV&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Longitude (generated)]' field-type='quantitative' max='-6767476.1724789646' min='-14873251.826420626' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Latitude (generated)]' field-type='quantitative' max='6503000.0650959089' min='532927.4784652628' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='52' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Rate:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Rate:qk]' value='SAT Rate'>
              <formatted-text>
                <run>SAT Rate</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Rate:qk]' />
              <lod column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]' />
              <geometry column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Latitude (generated)]</rows>
        <cols>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='US_Verbal'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='24'>Average SAT Verbal Scores by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sat_scores' name='federated.15wp4731kgiqpu1bmlkpl1uanrud' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15wp4731kgiqpu1bmlkpl1uanrud'>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Verbal]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Verbal]' derivation='Sum' name='[sum:Verbal:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;All&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ME&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MI&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ND&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NM&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OK&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;RI&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;SD&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;VT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WI&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WV&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Longitude (generated)]' field-type='quantitative' max='-6970485.5023171054' min='-15077316.00474103' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Latitude (generated)]' field-type='quantitative' max='6593644.0073665343' min='622794.50285956881' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Verbal:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Verbal:qk]' value='SAT Verbal Scores'>
              <formatted-text>
                <run>SAT Verbal Scores</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Verbal:qk]' />
              <lod column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]' />
              <geometry column='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Latitude (generated)]</rows>
        <cols>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Math'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='100000' id='1' name='US_Math' w='99600' x='0' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='26875' id='7' name='AK_Math' show-title='false' w='24100' x='3400' y='56500' />
        <zone h='17500' id='8' name='HI_Math' show-title='false' w='17800' x='28800' y='65125' />
        <zone h='7125' id='6' name='US_Math' pane-specification-id='0' param='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Math:qk]' type='color' w='14000' x='80500' y='69625' />
      </zones>
    </dashboard>
    <dashboard name='Rate'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='100000' id='1' name='US_Rate' w='99600' x='0' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='7125' id='6' name='US_Rate' pane-specification-id='0' param='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Rate:qk]' type='color' w='14000' x='80300' y='67875' />
        <zone h='29500' id='7' name='AK_Rate' show-title='false' w='27500' x='3800' y='55750' />
        <zone h='16875' id='8' name='HI_Rate' show-title='false' w='19200' x='31900' y='67750' />
      </zones>
    </dashboard>
    <dashboard name='Verbal'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='100000' id='1' name='US_Verbal' w='99600' x='0' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='7125' id='6' name='US_Verbal' pane-specification-id='0' param='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Verbal:qk]' type='color' w='14000' x='80300' y='69000' />
        <zone h='27875' id='7' name='AK_Verbal' show-title='false' w='27000' x='4500' y='56750' />
        <zone h='17875' id='8' name='HI_Verbal' show-title='false' w='16800' x='32300' y='65750' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='US_Math'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Math:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='HI_Math'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Math:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='AK_Math'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Math:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AK_Verbal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Verbal:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='HI_Verbal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Verbal:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='US_Verbal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Verbal:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='HI_Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AK_Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='US_Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15wp4731kgiqpu1bmlkpl1uanrud].[sum:Rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15wp4731kgiqpu1bmlkpl1uanrud].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Rate'>
      <viewpoints>
        <viewpoint name='AK_Rate'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='HI_Rate'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='US_Rate'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Math'>
      <viewpoints>
        <viewpoint name='AK_Math'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='8' />
        </viewpoint>
        <viewpoint name='HI_Math'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='US_Math'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Verbal'>
      <viewpoints>
        <viewpoint name='AK_Verbal'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='HI_Verbal'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='US_Verbal'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='AK_Math' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='AK_Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='AK_Verbal' width='192'>
      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
      2vNekqai/w/9dNvy8Nsy8AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='HI_Math' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='HI_Rate' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='HI_Verbal' width='192'>
      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
      af4P2BzqHbEzeZ4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Math' width='192'>
      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
      PHmSK65InTfl/PnzePi+O8ktrcCIx2jp9PPkn/ek7Vt12dx8TEPv/1uSZao7okm9UCzGx7RM
      gru7u/nls6/Q2dyATQ9ww8q5rL9qTf/xpUuXpvyelZWVZBDBnllAuOkYAgkx3mXpS0Rp8Rz0
      cGK12Iz4mW/v4y9uXz3qC8ViYlzywFi/+N1L9HZ1cOOGK1m9ehWhUIi+vr5Lcu9HP/Agr7z6
      Ohtuf5CevnDS6wqXmszMTDxSFKI9PLJ5KcVFySe7thgfl2QdIB6PU1dXR1dXFxUVFZSUlNDT
      00NubvqFSZ+udYDBBAIBgqEwxUXjy6JjrQOMjyl/BdbVn+b4saP0hTU+/MiD/Z+nY+NPJ7xe
      L17vyImfLVLDlAmgp6cHn8/HqVO1XHfddeTk5EzVrSwsJsykBRCPx1EUhX379rFgwQIMw8Dr
      9RKPx6moqKCioiIV9bSwmBImJADTNKmtraWmpobOzk7uv/9+iouLicfjlJQktjxO1JvRwuJS
      MqFJsN/vx+PxpK0VZTKkyyR4osy0+k43E2rBWVlZqa6HhcW0cHkkh7WwmCCX3xgmxei6PvZJ
      FjMWSwBjYE3mL2/GFIAsy7Mq7Y48yiZ9i8uPMQVgJVyzuJyxXncWsxpLABazGksAFrMaSwAW
      sxpLABazGksAFrMaSwAWsxpLABazGksAFrMaSwAWsxpLABazGksAFrMaSwAWsxpLABazGksA
      FrMaSwAWsxpLABazGksAFrMaSwAWsxpLABazGksAFrMaSwAWsxpLABazGksAFrOa/wekoYk+
      5OBX7AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Rate' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='US_Math' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='US_Rate' width='192'>
      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
      Ly4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='US_Verbal' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Verbal' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
